openapi: 3.0.0
info:
  title: Microservice API
  version: 1.0.0
  description: Документация для микросервисов Users, Products, Orders

servers:
  - url: http://localhost:8081/users
  - url: http://localhost:8082/products
  - url: http://localhost:8083/orders

paths:
  /users:
    post:
      summary: Создать пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
              required: [ name, email ]
      responses:
        '201':
          description: Пользователь создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    get:
      summary: Получить список пользователей
      responses:
        '200':
          description: Список пользователей
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /users/{id}:
    get:
      summary: Получить пользователя по ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Найденный пользователь
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Пользователь не найден

  /products:
    post:
      summary: Создать товар
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
              required: [ name, price ]
      responses:
        '201':
          description: Товар создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

    get:
      summary: Получить список товаров
      responses:
        '200':
          description: Список товаров
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

  /products/{id}:
    get:
      summary: Получить товар по ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Найденный товар
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Товар не найден

  /orders:
    post:
      summary: Создать заказ
      description: Создание заказа с проверкой существования пользователя и товара
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                productId:
                  type: integer
              required: [ userId, productId ]
      responses:
        '201':
          description: Заказ создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Пользователь или товар не найден

    get:
      summary: Получить список заказов
      responses:
        '200':
          description: Список заказов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'

  /orders/{id}:
    get:
      summary: Получить заказ по ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Найденный заказ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Заказ не найден

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string

    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number

    Order:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        productId:
          type: integer
        status:
          type: string
          example: CREATED